{% if section.settings.enable_country_selector %}
  <h1>Enable</h1>
{% else %}
  <h1>Not Enabled</h1>
{% endif %}
{% if section.settings.enable_country_selector %}
  {% assign grid = 'grid grid-cols-3 gap-2 m-0' %}
  {% assign slider = 'col-span-2' %}
{% else %}
  {% assign grid = 'grid grid-cols-1 m-0' %}
  {% assign slider = 'col-span-1' %}
{% endif %}

<div class="max-w-7xl mx-auto {{grid}} place-items-center">


  {% if section.blocks.size > 1 %}
    <div
      style="display:flex;justify-content:space-between;"
      class="{{slider}}"
      x-data="{    
                                                                                                                                                                                                                                                                                                                      data:[],
                                                                                                                                                                                                                                                                                                                      iterate:{{section.settings.auto_rotate}},
                                                                                                                                                                                                                                                                                                                      init() {                                           
                                                                                                                                                                                                                                                                                                                          {% for block in section.blocks %}
                                                                                                                                                                                                                                                                                                                            this.data.push('{{block.settings.text}}');
                                                                                                                                                                                                                                                                                                                          {% endfor %}
                                                                                                                                                                                                                                                                                                                          console.log({data:this.data})
                                                                                                                                                                                                                                                                                                                          if(!this.iterate) return
                                                                                                                                                                                                                                                                                                                          const interval=setInterval(()=>{
                                                                                                                                                                                                                                                                                                                              console.log({g:this.data})
                                                                                                                                                                                                                                                                                                                              this.handleNext()
                                                                                                                                                                                                                                                                                                                          },{{ section.settings.change_slides_speed }}*1000)
                                                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                                                      current:0,
                                                                                                                                                                                                                                                                                                                      handleBack(){
                                                                                                                                                                                                                                                                                                                      if(this.current===0){
                                                                                                                                                                                                                                                                                                                          return this.current=this.data.length-1;
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                      this.current--;
                                                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                                                      handleNext(){
                                                                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                                                      if(this.data.length-1===this.current){
                                                                                                                                                                                                                                                                                                                          return this.current=0;
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                      this.current++;
                                                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                  }">

      <button @click="handleBack" class="">Back</button>
      <span x-text="data[current]" class="text-center flex-1 flex items-center"></span>
      <button @click="handleNext" class="">Next</button>

    </div>
  {% else %}
    {% for block in section.blocks %}
      {% case block.type %}
        {% when 'announcement' %}
        {% if block.settings.text != blank %}
          {% if block.settings.link != blank %}
            <a href={{ block.settings.link }} target="_blank">
            {% endif %}
            <p class="text-center text-lg">{{ block.settings.text }}</p>
            {% if block.settings.link != blank %}
            </a>
          {% endif %}
        {% endif %}
      {% endcase %}
    {% endfor %}
  {% endif %}



  {% if section.settings.enable_country_selector %}
    <div class="justify-self-end">
      <noscript class="small-hide medium-hide">
        {%- form 'localization', id: 'AnnouncementCountryMobileFormNoScript', class: 'localization-form' -%}
          <div class="localization-form__select text-lg">
            <h2 class="visually-hidden" id="AnnouncementCountryMobileLabelNoScript">
              {{ 'localization.country_label' | t }}
            </h2>
            <select
              class="localization-selector link text-lg"
              name="country_code"
              aria-labelledby="AnnouncementCountryMobileLabelNoScript">
              {%- for country in localization.available_countries -%}
                <option value="{{ country.iso_code }}" {%- if country.iso_code == localization.country.iso_code %}selected{% endif %}>
                  {{ country.name }} ({{ country.currency.iso_code }}
                  {{ country.currency.symbol }})
                </option>
              {%- endfor -%}
            </select>
            {% render 'icon-caret' %}
          </div>
          <button class="button button--tertiary">{{ 'localization.update_country' | t }}</button>
        {%- endform -%}
      </noscript>

      <localization-form class="small-hide medium-hide no-js-hidden">
        {%- form 'localization', id: 'AnnouncementCountryForm', class: 'localization-form' -%}
          <div>
            <h2 class="visually-hidden" id="AnnouncementCountryLabel">{{ 'localization.country_label' | t }}</h2>
            {%- render 'country-localization', localPosition: 'AnnouncementCountry' -%}
          </div>
        {%- endform -%}
      </localization-form>
    </div>
  {% endif %}
</div>


{% schema %}
  {
    "name": "t:sections.announcement-bar.name",
    "max_blocks": 12,
    "class": "announcement-bar-section",
    "enabled_on": {
      "groups": ["header"]
    },
    "settings": [
      {
        "type": "color_scheme",
        "id": "color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "accent-1"
      },
      {
        "type": "checkbox",
        "id": "show_line_separator",
        "default": true,
        "label": "t:sections.header.settings.show_line_separator.label"
      },
      {
        "type": "header",
        "content": "t:sections.announcement-bar.settings.header__1.content",
        "info": "t:sections.announcement-bar.settings.header__1.info"
      },
      {
        "type": "checkbox",
        "id": "show_social",
        "default": false,
        "label": "t:sections.announcement-bar.settings.show_social.label"
      }, {
        "type": "header",
        "content": "t:sections.announcement-bar.settings.header__2.content"
      }, {
        "type": "checkbox",
        "id": "auto_rotate",
        "label": "t:sections.announcement-bar.settings.auto_rotate.label",
        "default": true
      }, {
        "type": "range",
        "id": "change_slides_speed",
        "min": 3,
        "max": 10,
        "step": 1,
        "unit": "s",
        "label": "t:sections.announcement-bar.settings.change_slides_speed.label",
        "default": 5
      }, {
        "type": "header",
        "content": "t:sections.announcement-bar.settings.header__3.content",
        "info": "t:sections.announcement-bar.settings.header__3.info"
      }, {
        "type": "checkbox",
        "id": "enable_country_selector",
        "default": false,
        "label": "t:sections.announcement-bar.settings.enable_country_selector.label"
      }, {
        "type": "header",
        "content": "t:sections.announcement-bar.settings.header__4.content",
        "info": "t:sections.announcement-bar.settings.header__4.info"
      }, {
        "type": "checkbox",
        "id": "enable_language_selector",
        "default": false,
        "label": "t:sections.announcement-bar.settings.enable_language_selector.label"
      }
    ],
    "blocks": [
      {
        "type": "announcement",
        "name": "t:sections.announcement-bar.blocks.announcement.name",
        "settings": [
          {
            "type": "text",
            "id": "text",
            "default": "Welcome to our store",
            "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
          }, {
            "type": "url",
            "id": "link",
            "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Announcement Tanveer",
        "blocks": [
          {
            "type": "announcement"
          }
        ]
      }
    ]
  }
{% endschema %}